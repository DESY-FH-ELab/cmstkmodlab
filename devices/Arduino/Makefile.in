ARCHITECTURE=@architecture@
USEFAKEDEVICES=@usefakedevices@

BASEPATH      = @basepath@
include $(BASEPATH)/devices/Makefile.common

LIBDIR        = $(BASEPATH)/devices/lib

LIB           = TkModLabArduino

MODULES       = ArduinoComHandler \
                VArduinoPres \
                ArduinoPresFake \
                ArduinoPres

ALLDEPEND = $(addsuffix .d,$(MODULES))

EXISTDEPEND = $(shell find . -name \*.d -type f -print)

all: depend lib testPres

depend: $(ALLDEPEND)

lib: $(LIBDIR)/lib$(LIB).so

$(LIBDIR)/lib$(LIB).so: $(addsuffix .o,$(MODULES))
	@(test -e $(LIBDIR) || mkdir $(LIBDIR))
	@echo "Linking shared library $@"
	$(LD) $(SOFLAGS) $^ -o $@

testPres: testPres.cc $(LIBDIR)/lib$(LIB).so
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) testPres.cc -o testPres -L../lib -lTkModLabArduino

%.d: %.cpp
	@echo Making dependency for file $< ...
	@set -e;\
	$(CXX) -M $(CPPFLAGS) $(CXXFLAGS)  $< |\
	sed 's!$*\.o!& $@!' >$@;\
	[ -s $@ ] || rm -f $@

%.o: %.cpp
	@echo "Compiling $<"
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

clean:
	@rm -f $(LIBDIR)/lib$(LIB).so
	@rm -f $(addsuffix .o,$(MODULES))
	@rm -f *.d
	@rm -f *~
	@rm -f testPres

ifeq ($(findstring clean,$(MAKECMDGOALS)),)
ifneq ($(EXISTDEPEND),)
-include $(EXISTDEPEND)
endif
endif
