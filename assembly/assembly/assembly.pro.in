ARCHITECTURE=@architecture@
USEFAKEDEVICES="X@usefakedevices@"
NOUEYE="X@noueye@"

LIBS += -L@basepath@/devices/lib -lTkModLabLang
LIBS += -L@basepath@/common -lCommon
LIBS += -L@basepath@/assembly/assemblyCommon -lAssemblyCommon

equals(USEFAKEDEVICES,"X1") {
  NOUEYE="X1"
}

macx {
  NOUEYE="X1"
  CONFIG+=x86_64
  QMAKE_CXXFLAGS += -stdlib=libc++
  QMAKE_MACOSX_DEPLOYMENT_TARGET = 11.3
}

equals(NOUEYE,"X0") {
  LIBS += -lueye_api
}

CONFIG += link_pkgconfig
PKGCONFIG += opencv

QMAKE = @qmake@

QMAKE_CXXFLAGS += -std=c++17
macx {
  QMAKE_CXXFLAGS += -DAPPLICATIONVERSIONSTR=\\\"unknown\\\"
}
else {
  QMAKE_CXXFLAGS += -DAPPLICATIONVERSIONSTR=\\\"`git describe --dirty --always --tags`\\\"
}

DEFINES += @configdefines@
equals(NOUEYE,"X1") {
  DEFINES += NOUEYE
}

QT += core gui xml network script svg
greaterThan(QT_MAJOR_VERSION, 4) {
  QT += widgets charts
} 

TARGET = assembly
TEMPLATE = app

macx {
  QMAKE_POST_LINK = install_name_tool -change libCommon.1.dylib @basepath@/common/libCommon.1.dylib $(TARGET)
  QMAKE_POST_LINK += && install_name_tool -change libAssemblyCommon.1.dylib @basepath@/assembly/assemblyCommon/libAssemblyCommon.1.dylib $(TARGET)
}

DEPENDPATH += @basepath@/common @basepath@/assembly/assemblyCommon
INCLUDEPATH += .
INCLUDEPATH += ..
INCLUDEPATH += @basepath@
INCLUDEPATH += @basepath@/common
INCLUDEPATH += @basepath@/assembly/assemblyCommon

greaterThan(QT_MAJOR_VERSION, 4) {
  cache()
}

# Input
HEADERS += AssemblyMainWindow.h

equals(NOUEYE,"X0") {
HEADERS += 
} else {
HEADERS += 
}

SOURCES += assembly.cc \
           AssemblyMainWindow.cc

equals(NOUEYE,"X0") {
SOURCES += 
} else {
SOURCES += 
}
